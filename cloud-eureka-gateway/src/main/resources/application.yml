server:
  port: 8080 #指定运行端口
spring:
  application:
    name: cloud-eureka-gateway #指定服务名称
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
          # 相同服务名下的同一个路径会使用默认的轮询方式 (例如同一个服务部署两个)
          # 使用逗号分隔似乎不生效,暂时采用此方式
        - id: cloud-eureka-client-consumer-01
          uri: lb://cloud-eureka-client-consumer #匹配后提供服务的路由地址
          predicates:
            - Path= /client/balanced/**
        - id: cloud-eureka-client-consumer-02
          uri: lb://cloud-eureka-client-consumer #匹配后提供服务的路由地址
          predicates:
            - Path= /client/common/**

        - id: cloud-eureka-client-consumer-feign-01
          uri: lb://cloud-eureka-client-consumer-feign
          predicates:
            - Path= /client/feign/**

        - id: cloud-eureka-client-consumer-ribbon
          uri: lb://cloud-eureka-client-consumer-ribbon
          predicates:
            - Path= /client/ribbon/**

        #- After=2020-02-21T15:51:37.485+08:00[Asia/Shanghai]
        #- Cookie=
        #- Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式
eureka:
  instance:
    hostname: 192.190.10.122
    #心跳间隔10s，默认30s。每一个服务配置后，心跳间隔和心跳超时时间会被保存在server端，不同服务的心跳频率可能不同，server端会根据保存的配置来分别探活
    lease-renewal-interval-in-seconds: 10
    #心跳超时时间30s，默认90s。从client端最后一次发出心跳后，达到这个时间没有再次发出心跳，表示服务不可用，将它的实例从注册中心移除
    lease-expiration-duration-in-seconds: 30
    #instance-id: cloud-eureka-client-consumer-0

  #Eureka Server默认地址：注册中心路径，表示我们向这个注册中心注册服务，如果向多个注册中心注册，用“，”进行分隔
  client:
    register-with-eureka: true #注册到Eureka的注册中心
    fetch-registry: true #获取注册实例列表
    service-url:
      defaultZone: http://${eureka.instance.hostname}:22911/eureka/ #,http://${eureka.instance.hostname}:22912/eureka/,http://${eureka.instance.hostname}:22913/eureka/